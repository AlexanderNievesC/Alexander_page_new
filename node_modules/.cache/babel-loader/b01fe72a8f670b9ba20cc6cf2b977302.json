{"ast":null,"code":"import React,{useState}from'react';import styled from'styled-components';import{colors}from'../styles/colors';import{fonts}from'../styles/typography';import undulate from\"../assets/undulate.svg\";import lines from\"../assets/lines.svg\";import programmer from\"../assets/programmer.svg\";export function Contact(){const[messageSent,setMessageSent]=useState(false);const onSubmit=async event=>{event.preventDefault();const formData=new FormData(event.target);formData.append(\"access_key\",\"cf243ad0-78d2-4264-bf57-6a8e4d518ac9\");const object=Object.fromEntries(formData);const json=JSON.stringify(object);const res=await fetch(\"https://api.web3forms.com/submit\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"},body:json}).then(res=>res.json());if(res.success){console.log(\"Success\",res);setMessageSent(true);// Actualiza el estado cuando el mensaje se envía\nevent.target.reset();}};return/*#__PURE__*/React.createElement(Main,null,/*#__PURE__*/React.createElement(Title,null,\"Contact me\"),/*#__PURE__*/React.createElement(ContactArea,null,/*#__PURE__*/React.createElement(ZoneForm,null,/*#__PURE__*/React.createElement(Form,{onSubmit:onSubmit},/*#__PURE__*/React.createElement(Label,null,\"Your name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"What's your name?\",name:\"name\",required:true}),/*#__PURE__*/React.createElement(Label,null,\"Your email\"),/*#__PURE__*/React.createElement(Input,{type:\"email\",placeholder:\"What's your email?\",name:\"email\",required:true}),/*#__PURE__*/React.createElement(Label,null,\"Your message\"),/*#__PURE__*/React.createElement(Input,{placeholder:\"What do you want to tell me?\",name:\"message\",required:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\"},\"Send\")),messageSent&&/*#__PURE__*/React.createElement(SuccessMessage,null,\"Thank you! Your message was sent successfully.\")),/*#__PURE__*/React.createElement(\"img\",{src:programmer,style:{width:'400px'}})));}const Main=styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    padding: 20px;\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    background-color: ${colors.purple[10]};\n`;const ZoneForm=styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    background-color: ${colors.purple[40]};\n    height: 450px;\n    width: 500px;\n    padding: 30px;\n    gap: 20px;\n    border-radius: 20px;\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n`;const Title=styled.div`\n    font-family: ${fonts.primary};\n    font-weight: 700;\n    font-size: 30px;\n    color: white;\n    padding: 20px;\n    text-shadow: 4px 4px 6px rgba(0, 0, 0, 0.5);\n`;const Form=styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%; \n`;const Label=styled.label`\n    color: white;\n    font-size: 15px;\n    text-shadow: 4px 4px 6px rgba(0, 0, 0, 0.5);\n`;const Button=styled.button`\n    border: black;\n    font-family: ${fonts.primary};\n    font-weight: bold;\n    border-radius: 10px;\n    color: white;\n    background-color: ${colors.turqiouse[20]};\n    width: 110px;\n    height: 50px;\n    font-size: 16px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n    &:hover {\n        color: white;\n        font-weight: bold;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n        cursor: pointer;\n    }\n`;const Input=styled.input`\n    padding: 10px;\n    border-radius: 10px;\n    background-color: rgba(255, 255, 255, 0.5);\n`;const ContactArea=styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 40px;\n    justify-items: center;\n    justify-content: center;\n`;const SuccessMessage=styled.div`\n    margin-top: 20px;\n    color: white;\n    font-size: 16px;\n    background-color: ${colors.turqiouse[20]};\n    padding: 10px;\n    border-radius: 5px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    text-align: center;\n`;","map":{"version":3,"names":["React","useState","styled","colors","fonts","undulate","lines","programmer","Contact","messageSent","setMessageSent","onSubmit","event","preventDefault","formData","FormData","target","append","object","Object","fromEntries","json","JSON","stringify","res","fetch","method","headers","Accept","body","then","success","console","log","reset","createElement","Main","Title","ContactArea","ZoneForm","Form","Label","Input","type","placeholder","name","required","Button","SuccessMessage","src","style","width","div","purple","primary","form","label","button","turqiouse","input"],"sources":["/home/pnieves/Alexander_page_new/src/elements/contact.js"],"sourcesContent":["import React,{ useState } from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../styles/colors';\nimport { fonts } from '../styles/typography';\nimport undulate from '../assets/undulate.svg';\nimport lines from '../assets/lines.svg'\nimport programmer from '../assets/programmer.svg'\n\nexport function Contact() {\n\n    const [messageSent, setMessageSent] = useState(false); \n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n\n        formData.append(\"access_key\", \"cf243ad0-78d2-4264-bf57-6a8e4d518ac9\");\n\n        const object = Object.fromEntries(formData);\n        const json = JSON.stringify(object);\n\n        const res = await fetch(\"https://api.web3forms.com/submit\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: json\n        }).then((res) => res.json());\n\n        if (res.success) {\n            console.log(\"Success\", res);\n            setMessageSent(true); // Actualiza el estado cuando el mensaje se envía\n            event.target.reset();\n        }\n      };\n\n\n    return (\n        <Main>\n        <Title>Contact me</Title>\n\n        <ContactArea>\n            <ZoneForm>\n                <Form onSubmit={onSubmit}>\n                    <Label>Your name</Label>\n                    <Input type=\"text\" placeholder=\"What's your name?\" name=\"name\" required />\n                    <Label>Your email</Label>\n                    <Input type=\"email\" placeholder=\"What's your email?\" name=\"email\" required />\n                    <Label>Your message</Label>\n                    <Input placeholder=\"What do you want to tell me?\" name=\"message\" required />\n                    <Button type=\"submit\">Send</Button>\n                </Form>\n\n                {/* Mostrar mensaje de confirmación */}\n                {messageSent && <SuccessMessage>Thank you! Your message was sent successfully.</SuccessMessage>}\n            </ZoneForm>\n\n            <img src={programmer} style={{ width: '400px' }} />\n        </ContactArea>\n    </Main>\n    );\n}\n\nconst Main = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    padding: 20px;\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    background-color: ${colors.purple[10]};\n`;\n\nconst ZoneForm = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    background-color: ${colors.purple[40]};\n    height: 450px;\n    width: 500px;\n    padding: 30px;\n    gap: 20px;\n    border-radius: 20px;\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n`;\n\nconst Title = styled.div`\n    font-family: ${fonts.primary};\n    font-weight: 700;\n    font-size: 30px;\n    color: white;\n    padding: 20px;\n    text-shadow: 4px 4px 6px rgba(0, 0, 0, 0.5);\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%; \n`;\n\nconst Label = styled.label`\n    color: white;\n    font-size: 15px;\n    text-shadow: 4px 4px 6px rgba(0, 0, 0, 0.5);\n`;\n\nconst Button = styled.button`\n    border: black;\n    font-family: ${fonts.primary};\n    font-weight: bold;\n    border-radius: 10px;\n    color: white;\n    background-color: ${colors.turqiouse[20]};\n    width: 110px;\n    height: 50px;\n    font-size: 16px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n    &:hover {\n        color: white;\n        font-weight: bold;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n        cursor: pointer;\n    }\n`;\n\nconst Input = styled.input`\n    padding: 10px;\n    border-radius: 10px;\n    background-color: rgba(255, 255, 255, 0.5);\n`;\n\nconst ContactArea = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 40px;\n    justify-items: center;\n    justify-content: center;\n`;\n\nconst SuccessMessage = styled.div`\n    margin-top: 20px;\n    color: white;\n    font-size: 16px;\n    background-color: ${colors.turqiouse[20]};\n    padding: 10px;\n    border-radius: 5px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    text-align: center;\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}