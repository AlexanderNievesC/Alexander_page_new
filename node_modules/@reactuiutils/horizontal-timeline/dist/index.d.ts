import * as react_jsx_runtime from 'react/jsx-runtime';
import React$1 from 'react';

type ActionButtonProps = {
    children?: React.ReactNode;
    className?: string;
    style?: React.HTMLAttributes<HTMLButtonElement>['style'];
} & React.HTMLAttributes<HTMLButtonElement>;
declare const ActionButton: ({ children, className, ...rest }: ActionButtonProps) => react_jsx_runtime.JSX.Element;

type TimelineProps = {
    children: React$1.ReactNode;
    minEvents?: number;
} & React$1.HTMLAttributes<HTMLDivElement>;
declare const Timeline: ({ children, minEvents, ...rest }: TimelineProps) => react_jsx_runtime.JSX.Element;

interface IconBaseProps extends React$1.SVGAttributes<SVGElement> {
    children?: React$1.ReactNode;
    size?: string | number;
    color?: string;
    title?: string;
}
declare type IconType = (props: IconBaseProps) => JSX.Element;
type TimelineEventProps = {
    color?: string;
    icon?: IconType;
    children?: React$1.ReactNode;
    isFirst?: boolean;
};
declare const TimelineEvent: ({ icon: Icon, isFirst, color, children, }: TimelineEventProps) => react_jsx_runtime.JSX.Element;

type TimelineTitleProps$1 = {
    children?: React.ReactNode;
    className?: string;
} & React.HTMLAttributes<HTMLDivElement>;
declare const TimelineSubTitle: ({ children, className, ...rest }: TimelineTitleProps$1) => react_jsx_runtime.JSX.Element;

type TimelineTitleProps = {
    children?: React.ReactNode;
    className?: string;
} & React.HTMLAttributes<HTMLDivElement>;
declare const TimelineTitle: ({ children, className, ...rest }: TimelineTitleProps) => react_jsx_runtime.JSX.Element;

export { ActionButton as Action, TimelineEvent as Event, TimelineSubTitle as Subtitle, Timeline, TimelineTitle as Title };
